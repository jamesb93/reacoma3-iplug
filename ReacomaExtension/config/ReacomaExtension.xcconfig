// IPLUG2_ROOT should point to the top level IPLUG2 folder
// By default, that is three directories up from /Examples/ReaperExtension/config
// If you want to build your project "out of source", you can change IPLUG2_ROOT and the path to common-mac.xcconfig

IPLUG2_ROOT = ../../dependencies/iPlug2
#include "../../dependencies/iPlug2/common-mac.xcconfig"

//------------------------------
// Global build settings

BINARY_NAME = ReacomaExtension

// ------------------------------
// HEADER AND LIBRARY SEARCH PATHS
EXTRA_INC_PATHS = $(IGRAPHICS_INC_PATHS) $(SWELL_PATH) $(REAPER_SDK) $(PROJECT_ROOT)/resources \
                  $(PROJECT_ROOT)/../dependencies/flucoma-core/build/_deps/eigen-src \
                  $(PROJECT_ROOT)/../dependencies/flucoma-core/build/_deps/fmt-src/include \
                  $(PROJECT_ROOT)/../dependencies/flucoma-core/build/_deps/hisstools-src/include \
                  $(PROJECT_ROOT)/../dependencies/flucoma-core/build/_deps/json-src/include \
                  $(PROJECT_ROOT)/../dependencies/flucoma-core/build/_deps/memory-src/include/foonathan \
                  $(PROJECT_ROOT)/../dependencies/flucoma-core/build/_deps/memory-build/src \
                  $(PROJECT_ROOT)/../dependencies/flucoma-core/build/_deps/spectra-src/include \
                  $(PROJECT_ROOT)/../dependencies/flucoma-core/build/_deps/tl_optional-src/include
//EXTRA_LIB_PATHS =
EXTRA_LNK_FLAGS = -framework Metal -framework MetalKit -framework OpenGL -framework Accelerate \
                  $(PROJECT_ROOT)/../dependencies/flucoma-core/build/libflucoma_VERSION_LIB.a \
                  $(PROJECT_ROOT)/../dependencies/flucoma-core/build/_deps/memory-build/src/libfoonathan_memory-0.7.4.a

//------------------------------
// PREPROCESSOR MACROS

EXTRA_ALL_DEFS = OBJC_PREFIX=vReacomaExtension SWELL_PROVIDED_BY_APP LICE_PROVIDED_BY_APP IGRAPHICS_NANOVG IGRAPHICS_METAL
//EXTRA_DEBUG_DEFS =
//EXTRA_RELEASE_DEFS =
//EXTRA_TRACER_DEFS =

//------------------------------
// RELEASE BUILD OPTIONS

//Enable/Disable Profiling code
PROFILE = NO //NO, YES - enable this if you want to use instruments to profile a plugin

// GCC optimization level -
// None: [-O0] Fast: [-O, -O1] Faster:[-O2] Fastest: [-O3] Fastest, smallest: Optimize for size. [-Os]
RELEASE_OPTIMIZE = 3 //0,1,2,3,s

//------------------------------
// DEBUG BUILD OPTIONS
DEBUG_OPTIMIZE = 0 //0,1,2,3,s

//------------------------------
// MISCELLANEOUS COMPILER OPTIONS

//ARCHS = $(ARCHS_STANDARD_32_64_BIT)
ARCHS = $(ARCHS_STANDARD_64_BIT)

GCC_INCREASE_PRECOMPILED_HEADER_SHARING = NO

// Flags to pass to compiler for all builds
GCC_CFLAGS[arch=x86_64] = -Wno-write-strings -mfpmath=sse -msse -msse2 -msse3 //-mavx
